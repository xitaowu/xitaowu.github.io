{
	"version": "https://jsonfeed.org/version/1.1",
	"title": "Windows package managers",
	"language": "en",
	"home_page_url": "https://example.com/",
	"feed_url": "https://example.com/feed/feed.json",
	"description": "I am writing about my experiences as a naval navel-gazer.",
	"author": {
		"name": "Your Name Here",
		"url": "https://example.com/about-me/"
	},
	"items": [
		{
			"id": "https://example.com/blog/tenthpost/",
			"url": "https://example.com/blog/tenthpost/",
			"title": "Difference",
			"content_html": "<p>Windows包管理器是用于在Windows系统中自动安装、配置、卸载和升级软件包的工具组合。以下是一些Windows包管理器之间的区别：</p>\n<h3 id=\"vcpkg\" tabindex=\"-1\">vcpkg： <a class=\"header-anchor\" href=\"https://example.com/blog/tenthpost/\">#</a></h3>\n<p>这是一个C++库管理器，用于在Windows、Linux和MacOS上构建和管理本地C++库。vcpkg专注于C++库的集成，提供了一个方便的命令行界面来安装、更新和删除库。</p>\n<h3 id=\"chocolatey\" tabindex=\"-1\">Chocolatey： <a class=\"header-anchor\" href=\"https://example.com/blog/tenthpost/\">#</a></h3>\n<p>Chocolatey是一个Windows的包管理器，类似于Linux中的apt-get或yum。它允许你从命令行界面安装、更新和卸载软件包。Chocolatey主要关注于Windows桌面应用程序和工具，提供了一个强大的包管理系统。</p>\n<h3 id=\"nuget\" tabindex=\"-1\">NuGet： <a class=\"header-anchor\" href=\"https://example.com/blog/tenthpost/\">#</a></h3>\n<p>NuGet是一个.NET的包管理器，它允许你从命令行、Visual Studio或Visual Studio Code等IDE中安装、更新和删除.NET包。NuGet是.NET生态系统中的一个重要部分，用于管理.NET项目的依赖关系。</p>\n<h3 id=\"winget\" tabindex=\"-1\">WinGet： <a class=\"header-anchor\" href=\"https://example.com/blog/tenthpost/\">#</a></h3>\n<p>WinGet（也称为Windows Package Manager）是Windows 10和Windows 11的官方包管理器。它提供了一个命令行界面来安装、更新和卸载软件包。WinGet的设计目标是提供一个快速、可靠和安全的方式来管理Windows上的软件包。</p>\n<h3 id=\"scoop\" tabindex=\"-1\">Scoop： <a class=\"header-anchor\" href=\"https://example.com/blog/tenthpost/\">#</a></h3>\n<p>Scoop是另一个Windows的包管理器，它使用PowerShell脚本来安装和管理软件。Scoop的设计目标是提供一个简单、快速和可定制的方式来安装和管理Windows应用程序。</p>\n<h2 id=\"else\" tabindex=\"-1\">else <a class=\"header-anchor\" href=\"https://example.com/blog/tenthpost/\">#</a></h2>\n<p>这些包管理器之间的主要区别在于它们的用途、支持的包类型、用户界面以及与其他工具和系统的集成程度。例如，vcpkg专注于C++库的管理，而NuGet则专注于.NET项目。Chocolatey和Scoop提供了更广泛的软件包支持，而WinGet则是Windows的官方包管理器。在选择使用哪个包管理器时，您应该考虑您的具体需求和偏好。</p>\n",
			"date_published": "2024-05-13T00:00:00Z"
		}
		,
		{
			"id": "https://example.com/blog/firstpost/",
			"url": "https://example.com/blog/firstpost/",
			"title": "Winget",
			"content_html": "<p>WinGet是微软开发的Windows包管理器，它提供了一个命令行界面（CLI），允许用户自动化地安装、配置、更新和卸载Windows软件包。这个工具旨在简化软件管理过程，使得开发者和系统管理员可以更高效地管理Windows系统上的软件。</p>\n<h2 id=\"how-to-use-winget\" tabindex=\"-1\">How to use Winget <a class=\"header-anchor\" href=\"https://example.com/blog/firstpost/\">#</a></h2>\n<p>WinGet的基本用法包括：</p>\n<ol>\n<li>安装软件包：打开命令提示符（管理员）或PowerShell（以管理员身份运行），然后输入winget install &lt;包名&gt;，例如winget install Notepadplusplus。</li>\n<li>更新软件包：同样打开命令提示符（管理员）或PowerShell（以管理员身份运行），然后输入winget update &lt;包名&gt;，例如winget update Notepadplusplus。</li>\n<li>卸载软件包：WinGet本身不提供直接的卸载命令，但用户可以通过控制面板或其他卸载方式进行卸载。</li>\n<li>查看已安装的软件包列表：输入winget list可以查看已安装的软件包列表。</li>\n</ol>\n<h2 id=\"else\" tabindex=\"-1\">Else <a class=\"header-anchor\" href=\"https://example.com/blog/firstpost/\">#</a></h2>\n<p>WinGet还支持查看特定软件包的详细信息，这通常涉及到编辑WinGet的配置文件。同时，用户还可以使用winget --info命令查找WinGet日志文件的目录路径，这对于排查问题或了解软件包的安装和更新过程非常有帮助。<br>\nWinGet作为一个免费的下载管理器，支持多线程下载、断点续传，并且支持HTTP、FTP、BT等多种下载方式。与Scoop等其他包管理器不同，WinGet安装包安装逻辑上与下载安装包安装没有太大差别，因此可以像普通软件一样进行安装和卸载。<br>\n总的来说，WinGet是一个强大的Windows包管理器，它可以帮助用户更高效地管理和维护Windows系统上的软件。</p>\n<img src=\"https://example.com/blog/firstpost/Winget.png\">  \n<pre><code></code></pre>\n",
			"date_published": "2024-05-12T00:00:00Z"
		}
		,
		{
			"id": "https://example.com/blog/secondpost/",
			"url": "https://example.com/blog/secondpost/",
			"title": "How to download Winget",
			"content_html": "<p>要使用WinGet安装软件包，您需要确保您的Windows系统上已经安装了WinGet包管理器。如果您还没有安装WinGet，您可以从Microsoft的官方GitHub仓库下载并安装。</p>\n<h2 id=\"winget\" tabindex=\"-1\">以下是如何使用WinGet安装软件包的步骤： <a class=\"header-anchor\" href=\"https://example.com/blog/secondpost/\">#</a></h2>\n<h3 id=\"powershell\" tabindex=\"-1\">打开命令提示符或PowerShell： <a class=\"header-anchor\" href=\"https://example.com/blog/secondpost/\">#</a></h3>\n<p>○ 在Windows搜索中输入cmd（对于命令提示符）或PowerShell（对于PowerShell），然后以管理员身份运行。</p>\n<h3 id=\"winget-1\" tabindex=\"-1\">确认WinGet是否已安装： <a class=\"header-anchor\" href=\"https://example.com/blog/secondpost/\">#</a></h3>\n<p>在命令提示符或PowerShell中，输入以下命令：</p>\n<pre class=\"language-diff-js\" tabindex=\"0\"><code class=\"language-diff-js\">winget --version</code></pre>\n<p>如果WinGet已安装，您将看到版本信息。如果没有安装，您需要按照官方指南进行安装。</p>\n<h3 id=\"\" tabindex=\"-1\">搜索软件包（可选）： <a class=\"header-anchor\" href=\"https://example.com/blog/secondpost/\">#</a></h3>\n<p>在安装软件包之前，您可能想要搜索WinGet仓库中是否有您想要的软件包。使用以下命令：</p>\n<pre class=\"language-diff-js\" tabindex=\"0\"><code class=\"language-diff-js\">winget search &lt;包名></code></pre>\n<p>将&lt;包名&gt;替换为您要搜索的软件包名称。</p>\n<h3 id=\"-1\" tabindex=\"-1\">安装软件包： <a class=\"header-anchor\" href=\"https://example.com/blog/secondpost/\">#</a></h3>\n<p>使用以下命令安装软件包：</p>\n<pre class=\"language-diff-js\" tabindex=\"0\"><code class=\"language-diff-js\">winget install &lt;包名></code></pre>\n<p>将&lt;包名&gt;替换为您要安装的软件包的确切名称。请注意，软件包名称可能是区分大小写的，因此请确保输入正确。</p>\n<h3 id=\"-2\" tabindex=\"-1\">等待安装完成： <a class=\"header-anchor\" href=\"https://example.com/blog/secondpost/\">#</a></h3>\n<p>WinGet将自动下载并安装软件包。安装过程可能需要一些时间，具体取决于软件包的大小和您的系统性能。</p>\n<h3 id=\"-3\" tabindex=\"-1\">验证安装： <a class=\"header-anchor\" href=\"https://example.com/blog/secondpost/\">#</a></h3>\n<p>安装完成后，您可以打开已安装的软件来验证它是否已成功安装。\n请注意，由于WinGet是一个相对较新的工具，某些软件包可能尚未在WinGet仓库中可用。如果找不到您想要的软件包，您可能需要查看该软件的官方网站或等待它被添加到WinGet仓库中。\n此外，WinGet还在不断发展和改进中，因此建议定期查看Microsoft的官方文档以获取最新信息和更新。</p>\n<h2 id=\"-4\" tabindex=\"-1\">题外话： <a class=\"header-anchor\" href=\"https://example.com/blog/secondpost/\">#</a></h2>\n<p>也可以前往“https://zhuanlan.zhihu.com/p/659515299”获得详细教程。</p>\n",
			"date_published": "2024-05-11T00:00:00Z"
		}
		,
		{
			"id": "https://example.com/blog/thirdpost/",
			"url": "https://example.com/blog/thirdpost/",
			"title": "Chocolatey",
			"content_html": "<p>Chocolatey，它是一款Windows的包管理器，类似于Linux下的包管理工具apt或yum。Chocolatey旨在为用户提供一种简单、易用且功能强大的方式来安装、更新、卸载和管理Windows下的软件和工具。</p>\n<h2 id=\"advantage\" tabindex=\"-1\">Advantage <a class=\"header-anchor\" href=\"https://example.com/blog/thirdpost/\">#</a></h2>\n<ol>\n<li>命令行操作：用户可以通过命令行界面来搜索、安装、更新和卸载软件包，无需手动下载和安装每个软件。</li>\n<li>自动化：Chocolatey支持脚本和自动化，使得在多台电脑上批量安装和配置软件变得更加容易。</li>\n<li>依赖管理：Chocolatey可以自动处理软件包的依赖关系，确保所有必要的依赖项都已正确安装。</li>\n<li>团队环境：Chocolatey支持配置统一环境，通过配置文件可以配置一个团队统一的开发环境，确保所有成员都使用相同的软件和版本。</li>\n<li>安全性：Chocolatey提供了一个安全的软件源，用户可以从该源下载和安装经过验证的软件包，从而降低了通过不安全来源下载软件的风险。</li>\n</ol>\n<h2 id=\"else\" tabindex=\"-1\">Else <a class=\"header-anchor\" href=\"https://example.com/blog/thirdpost/\">#</a></h2>\n<p>安装Chocolatey通常涉及在PowerShell中运行一个安装脚本。一旦安装完成，用户就可以使用choco命令来搜索、安装、更新和卸载软件包。\n总的来说，Chocolatey是一个强大的Windows包管理器，可以帮助用户更加高效和自动化地管理软件，节省时间和精力。</p>\n",
			"date_published": "2024-05-10T00:00:00Z"
		}
		,
		{
			"id": "https://example.com/blog/fourthpost/",
			"url": "https://example.com/blog/fourthpost/",
			"title": "How to download Chocolatey",
			"content_html": "<p>Chocolatey 是一个 Windows 下的包管理器，它允许用户通过命令行来搜索、安装、更新和卸载软件包。Chocolatey 的设计理念类似于 Linux 系统中的 apt-get 或 yum，旨在提供一个更加高效和自动化的方式来管理 Windows 上的软件。\n以下是关于 Chocolatey 的一些基本用法：</p>\n<h2 id=\"chocolatey\" tabindex=\"-1\">安装 Chocolatey <a class=\"header-anchor\" href=\"https://example.com/blog/fourthpost/\">#</a></h2>\n<ol>\n<li>打开 PowerShell：以管理员身份打开 PowerShell。</li>\n<li>运行安装命令：在 PowerShell 中输入以下命令并按 Enter 键来安装 Chocolatey。</li>\n</ol>\n<pre class=\"language-diff-js\" tabindex=\"0\"><code class=\"language-diff-js\">@\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \"iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" &amp;&amp; SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\"</code></pre>\n<p>这个命令会从 Chocolatey 的官方网站下载并运行安装脚本。</p>\n<h2 id=\"chocolatey-1\" tabindex=\"-1\">使用 Chocolatey 安装软件包 <a class=\"header-anchor\" href=\"https://example.com/blog/fourthpost/\">#</a></h2>\n<ol>\n<li>搜索软件包：使用 choco search 命令来搜索软件包。例如，要搜索 Notepad++，可以输入：</li>\n</ol>\n<pre class=\"language-diff-js\" tabindex=\"0\"><code class=\"language-diff-js\">choco search notepad++</code></pre>\n<ol start=\"2\">\n<li>安装软件包：使用 choco install 命令来安装软件包。例如，要安装 Notepad++，可以输入：</li>\n</ol>\n<pre class=\"language-diff-js\" tabindex=\"0\"><code class=\"language-diff-js\">choco install notepadplusplus</code></pre>\n<p>Chocolatey 会自动下载并安装软件包及其依赖项。</p>\n<h2 id=\"\" tabindex=\"-1\">更新和卸载软件包 <a class=\"header-anchor\" href=\"https://example.com/blog/fourthpost/\">#</a></h2>\n<p>● 更新软件包：使用 choco upgrade 命令来更新已安装的软件包。例如，要更新 Notepad++，可以输入：</p>\n<pre class=\"language-diff-js\" tabindex=\"0\"><code class=\"language-diff-js\">choco upgrade notepadplusplus</code></pre>\n<p>● 卸载软件包：使用 choco uninstall 命令来卸载软件包。例如，要卸载 Notepad++，可以输入：</p>\n<pre class=\"language-diff-js\" tabindex=\"0\"><code class=\"language-diff-js\">choco uninstall notepadplusplus</code></pre>\n<h2 id=\"chocolatey-2\" tabindex=\"-1\">配置 Chocolatey <a class=\"header-anchor\" href=\"https://example.com/blog/fourthpost/\">#</a></h2>\n<p>Chocolatey 还提供了许多配置选项和高级功能，如配置软件源、设置代理、使用配置文件等。这些功能可以通过 Chocolatey 的文档和社区论坛进行深入了解。\n总之，Chocolatey 是一个强大的 Windows 包管理器，可以帮助用户更加高效和自动化地管理软件。通过命令行界面，用户可以轻松地搜索、安装、更新和卸载软件包，从而节省时间和精力。</p>\n<h2 id=\"-1\" tabindex=\"-1\">题外话 <a class=\"header-anchor\" href=\"https://example.com/blog/fourthpost/\">#</a></h2>\n<p>如果需要更详细的教程可以前往https://blog.csdn.net/m0_49183941/article/details/107482650。</p>\n",
			"date_published": "2024-05-09T00:00:00Z"
		}
		,
		{
			"id": "https://example.com/blog/fifthpost/",
			"url": "https://example.com/blog/fifthpost/",
			"title": "Scoop",
			"content_html": "<p>Scoop是Windows的命令行安装程序，也是一个强大的包管理工具。它可以在GitHub上找到相关项目的信息。Scoop的诞生省去了繁琐的“搜索-下载-安装”步骤，使得用户能够通过“一行代码”急速安装所需的软件包。</p>\n<h2 id=\"advantage\" tabindex=\"-1\">Advantage <a class=\"header-anchor\" href=\"https://example.com/blog/fifthpost/\">#</a></h2>\n<ol>\n<li>集成搜索、下载、安装和更新：Scoop不仅可以帮助用户搜索和下载软件包，还可以自动安装和更新这些软件包。这极大地降低了安装和维护软件的成本。</li>\n<li>干净安装：Scoop将软件安装在用户的文件夹下，这样既不会污染系统路径，也不会请求不必要的权限（UAC）。</li>\n<li>卸载彻底：在卸载软件时，Scoop能够尽量清空软件在电脑上存储的任何数据和痕迹。</li>\n<li>适合开发者：Scoop特别适合为开发者配置开发环境，因为它支持安装各种开源和小巧的软件包。</li>\n</ol>\n<h2 id=\"else\" tabindex=\"-1\">Else <a class=\"header-anchor\" href=\"https://example.com/blog/fifthpost/\">#</a></h2>\n<p>要使用Scoop安装软件包，你需要先安装Scoop本身。安装条件包括Windows 7以上64位系统和PowerShell 3以上版本。安装完成后，你可以使用scoop search <package-name>命令来搜索软件包，使用scoop install <package-name>命令来安装软件包，使用scoop update <package-name>命令来更新软件包，以及使用scoop uninstall <package-name>命令来卸载软件包。\n请注意，由于Scoop是一个开源项目，因此它可能不包含所有你需要的软件包。如果你找不到你需要的软件包，你可以考虑向Scoop的社区请求添加该软件包，或者寻找其他适合你的包管理器。</package-name></package-name></package-name></package-name></p>\n",
			"date_published": "2024-05-08T00:00:00Z"
		}
		,
		{
			"id": "https://example.com/blog/sixthpost/",
			"url": "https://example.com/blog/sixthpost/",
			"title": "How to download Scoop",
			"content_html": "<h2 id=\"scoop\" tabindex=\"-1\">要安装Scoop，你需要遵循以下步骤： <a class=\"header-anchor\" href=\"https://example.com/blog/sixthpost/\">#</a></h2>\n<h3 id=\"scoop-windows-7-64-powershell-3-psversiontable-psversion-powershell-powershell\" tabindex=\"-1\">确保你的系统满足安装条件：Scoop需要Windows 7以上64位系统以及PowerShell 3以上版本。你可以通过输入$PSVersionTable.PSVersion在PowerShell中查看你的PowerShell版本。 <a class=\"header-anchor\" href=\"https://example.com/blog/sixthpost/\">#</a></h3>\n<h3 id=\"scoop-internet-powershell-powershell\" tabindex=\"-1\">更改脚本执行策略：由于Scoop的安装脚本需要从Internet下载，你需要确保你的PowerShell具有执行远程脚本的权限。在PowerShell中输入以下命令来更改脚本执行策略： <a class=\"header-anchor\" href=\"https://example.com/blog/sixthpost/\">#</a></h3>\n<pre class=\"language-diff-js\" tabindex=\"0\"><code class=\"language-diff-js\">Set-ExecutionPolicy RemoteSigned -Scope CurrentUser</code></pre>\n<p>这个命令将当前用户的执行策略设置为RemoteSigned，允许运行本地脚本和已签名的远程脚本。</p>\n<h3 id=\"scoop-d-scoop\" tabindex=\"-1\">设置环境变量：Scoop需要一个安装目录。你可以通过以下命令来设置环境变量并指定安装目录（这里以D:\\Scoop为例）： <a class=\"header-anchor\" href=\"https://example.com/blog/sixthpost/\">#</a></h3>\n<pre class=\"language-diff-js\" tabindex=\"0\"><code class=\"language-diff-js\">$env:SCOOP='D:\\Scoop'  \n[Environment]::SetEnvironmentVariable('SCOOP',$env:SCOOP,'User')</code></pre>\n<p>注意，这里设置的环境变量第三个参数'User'表示用户级别，'Machine'表示系统级别。如果你没有足够的权限设置系统级别的环境变量，可以手动在环境变量设置中完成。</p>\n<h3 id=\"scoop-scoop\" tabindex=\"-1\">下载并安装Scoop：最后，使用以下命令下载Scoop的安装脚本并执行安装： <a class=\"header-anchor\" href=\"https://example.com/blog/sixthpost/\">#</a></h3>\n<pre class=\"language-diff-js\" tabindex=\"0\"><code class=\"language-diff-js\">iex (new-object net.webclient).downloadstring('https://get.scoop.sh')</code></pre>\n<p>完成以上步骤后，Scoop应该已经成功安装在你的系统中。你可以通过输入scoop help来查看Scoop的帮助文档，了解如何使用Scoop来搜索、安装、更新和卸载软件包。</p>\n<h2 id=\"\" tabindex=\"-1\">题外话 <a class=\"header-anchor\" href=\"https://example.com/blog/sixthpost/\">#</a></h2>\n<p>如果需要更详细的步骤可以前往：https://blog.csdn.net/sinshine86/article/details/126786780。</p>\n",
			"date_published": "2024-05-07T00:00:00Z"
		}
		,
		{
			"id": "https://example.com/blog/seventhpost/",
			"url": "https://example.com/blog/seventhpost/",
			"title": "nuget",
			"content_html": "<p>NuGet是一个自由开源的软件包管理系统，专门用于Microsoft开发平台。它最初被称为NuPack，但随后更名为NuGet。NuGet作为Visual Studio的扩展，能够极大地简化在Visual Studio项目中添加、更新和删除库（这些库被部署为程序包）的操作。</p>\n<h2 id=\"\" tabindex=\"-1\">使用方面 <a class=\"header-anchor\" href=\"https://example.com/blog/seventhpost/\">#</a></h2>\n<p>NuGet包通常被打包成单个ZIP文件，文件扩展名为.nupkg，使用开放打包约定（OPC）格式。这些包包含编译代码（Dll）、与该代码相关的其他文件以及描述性清单（包含包版本号等信息）。</p>\n<p>NuGet不仅是一个包管理平台，还是.NET平台的包管理工具。它提供了一系列客户端用于生成、上传和使用包，以及一个用于存储所有包的中心库，即NuGet Gallery。此外，如果有需要，开发者也可以搭建自己的私有NuGet库。</p>\n<p>NuGet的使用方式非常灵活。创建者可以生成有用的NuGet包并将其发布到主机，而使用者则可以在可访问的主机上搜索有用且兼容的包，下载包并将其包含在项目中。一旦包被安装在项目中，其API就可以被项目中的其他代码所使用。</p>\n<h2 id=\"else\" tabindex=\"-1\">Else <a class=\"header-anchor\" href=\"https://example.com/blog/seventhpost/\">#</a></h2>\n<p>NuGet还支持管理项目的依赖关系。它可以帮助开发者跟踪和还原项目所依赖的包，包括顶层和下层的依赖关系。这使得开发者可以更加轻松地管理他们的项目，而无需担心复杂的依赖关系问题。</p>\n<p>此外，由于NuGet支持公用和专用主机，因此开发者可以使用NuGet包来共享组织或工作组专用的代码。这使得代码共享变得更加容易和灵活。</p>\n<p>总的来说，NuGet是一个强大而灵活的工具，它可以帮助.NET开发者更加高效地管理他们的项目和依赖关系。</p>\n",
			"date_published": "2024-05-06T00:00:00Z"
		}
		,
		{
			"id": "https://example.com/blog/ninthpost/",
			"url": "https://example.com/blog/ninthpost/",
			"title": "How to download nuget",
			"content_html": "<p>安装NuGet有多种方法，以下是其中的两种常见方法：</p>\n<h2 id=\"visual-studio-nuget\" tabindex=\"-1\">方法一：通过Visual Studio安装NuGet <a class=\"header-anchor\" href=\"https://example.com/blog/ninthpost/\">#</a></h2>\n<p>打开Visual Studio，选择“扩展”-&gt;“管理扩展”。\n在弹出的“扩展和更新”窗口中，选择“联机”选项卡，并在搜索框中输入“NuGet”。\n在搜索结果中找到“NuGet Package Manager”并点击下载。\n下载完成后，按照提示进行安装。安装完成后，重启Visual Studio。</p>\n<h2 id=\"nuget\" tabindex=\"-1\">方法二：直接下载并安装NuGet <a class=\"header-anchor\" href=\"https://example.com/blog/ninthpost/\">#</a></h2>\n<p>访问NuGet的官方网站（https://www.nuget.org/），在页面上找到并点击“Install NuGet”按钮，下载Vsix文件。\n双击下载的Vsix文件，按照提示进行安装。安装过程中可能需要你同意一些条款和条件。\n安装完成后，重启Visual Studio。\n请注意，如果你的Visual Studio版本是MVC3以上版本，NuGet可能已经自动安装在你的系统中了。</p>\n<p>以上两种方法都可以帮助你成功安装NuGet。安装完成后，你就可以在Visual Studio中使用NuGet来管理你的项目和依赖项了。</p>\n<h2 id=\"\" tabindex=\"-1\">题外话： <a class=\"header-anchor\" href=\"https://example.com/blog/ninthpost/\">#</a></h2>\n<p>如果需要更详细的教程，可以前往：https://learn.microsoft.com/zh-cn/nuget/install-nuget-client-tools?tabs=windows。</p>\n",
			"date_published": "2024-05-05T00:00:00Z"
		}
		,
		{
			"id": "https://example.com/blog/eighthpost/",
			"url": "https://example.com/blog/eighthpost/",
			"title": "Vcpkg",
			"content_html": "<p>VCPKG是微软C++团队开发的适用于C和C++库的跨平台开源软件包管理器。它大大简化了Windows、Linux和macOS上第三方库相关的下载和配置操作，目前已有超过1600个第三方库可以通过vcpkg来安装。</p>\n<h2 id=\"vcpkg\" tabindex=\"-1\">VCPKG的优势包括： <a class=\"header-anchor\" href=\"https://example.com/blog/eighthpost/\">#</a></h2>\n<p>1.自动下载开源库源代码。\n2.一键安装第三方库。\n3.源码包的缓存管理和版本管理，可以依需求安装指定的版本。\n4.自动检查库的依赖关系并安装其依赖项。\n5.无缝集成Visual Studio，不用手动设置任何的库相关的路径。\n6.Visual Studio全平台支持，不仅支持Debug/Release、x86/x64编译，还支持UWP、ARM平台的编译。\nVCPKG是一个开源项目，有很多贡献者，通过vcpkg团队及贡献者共同的努力，vcpkg得以快速发展。</p>\n<h2 id=\"vcpkg-1\" tabindex=\"-1\">以下是一些基本的vcpkg用法： <a class=\"header-anchor\" href=\"https://example.com/blog/eighthpost/\">#</a></h2>\n<p>1.安装vcpkg：在官方GitHub仓库（https://github.com/microsoft/vcpkg）并按照官方文档上的说明进行安装。\n2.集成vcpkg到项目：在项目的根目录下打开命令行或终端窗口，运行vcpkg integrate install命令，将vcpkg集成到项目中。\n3.查找和安装库：使用vcpkg search命令可以查找可用的库。例如，vcpkg search boost可以查找与Boost相关的库。使用vcpkg install命令可以安装指定的库。\n4.导入库：在项目的CMakeLists.txt或者其他构建文件中，使用find_package命令导入已安装的库。例如，find_package(Boost REQUIRED)。\n5.使用库：在项目代码中，可以像使用其他C++库一样使用vcpkg安装的库。\n以上信息仅供参考，如需了解更多关于vcpkg的信息，建议访问其官方GitHub仓库或查阅相关文档。</p>\n",
			"date_published": "2024-05-04T00:00:00Z"
		}
		,
		{
			"id": "https://example.com/blog/eleventhpost/",
			"url": "https://example.com/blog/eleventhpost/",
			"title": "How to download nuget Vcpkg",
			"content_html": "<h2 id=\"vcpkg\" tabindex=\"-1\">安装vcpkg的步骤如下： <a class=\"header-anchor\" href=\"https://example.com/blog/eleventhpost/\">#</a></h2>\n<h3 id=\"vcpkg-1\" tabindex=\"-1\">下载vcpkg： <a class=\"header-anchor\" href=\"https://example.com/blog/eleventhpost/\">#</a></h3>\n<p>使用git命令下载：在命令行窗口（cmd）中输入git clone https://github.com/microsoft/vcpkg.git，这将会在你的当前目录下创建一个名为vcpkg的文件夹，其中包含了vcpkg的源代码。\n如果你的电脑没有安装git，你也可以直接从GitHub上下载vcpkg的压缩包，并解压到指定的目录。</p>\n<h3 id=\"\" tabindex=\"-1\">设置环境变量： <a class=\"header-anchor\" href=\"https://example.com/blog/eleventhpost/\">#</a></h3>\n<p>将下载的vcpkg目录添加到系统的PATH环境变量中。这样，你就可以在命令行中直接运行vcpkg的命令了。具体步骤是：右键点击“此电脑”-&gt;“属性”-&gt;“高级系统设置”-&gt;“环境变量”，然后在“系统变量”中找到“Path”变量，双击编辑，将vcpkg的目录添加进去。</p>\n<h3 id=\"bootstrap\" tabindex=\"-1\">运行bootstrap脚本： <a class=\"header-anchor\" href=\"https://example.com/blog/eleventhpost/\">#</a></h3>\n<p>打开命令行窗口，并导航到vcpkg的目录（例如，使用cd命令）。\n运行bootstrap-vcpkg.bat脚本来编译并生成vcpkg的可执行文件（如果下载的是压缩包，可能需要先解压）。这个脚本会下载并安装vcpkg所需的依赖项，并生成vcpkg.exe文件。</p>\n<h3 id=\"visual-studio\" tabindex=\"-1\">（可选）集成到Visual Studio： <a class=\"header-anchor\" href=\"https://example.com/blog/eleventhpost/\">#</a></h3>\n<p>如果你想将vcpkg与Visual Studio集成，以便在Visual Studio中直接使用vcpkg来管理库，你可以运行vcpkg integrate install命令。这个命令会在你的系统中生成一些配置文件，以便Visual Studio能够识别并使用vcpkg。</p>\n<h3 id=\"vcpkg-2\" tabindex=\"-1\">使用vcpkg安装库： <a class=\"header-anchor\" href=\"https://example.com/blog/eleventhpost/\">#</a></h3>\n<p>现在，你就可以使用vcpkg来安装你需要的库了。例如，如果你想安装opencv库，你可以运行vcpkg install opencv4:x64-windows命令。这将会下载并安装opencv4的x64版本到Windows平台上。\n请注意，以上步骤是基于Windows系统的安装方法。如果你使用的是其他操作系统（如Linux或macOS），安装步骤可能会有所不同。</p>\n<h2 id=\"-1\" tabindex=\"-1\">题外话： <a class=\"header-anchor\" href=\"https://example.com/blog/eleventhpost/\">#</a></h2>\n<p>如果需要更详细的安装步骤可以前往https://blog.csdn.net/sexyluna/article/details/115285405。</p>\n",
			"date_published": "2024-05-03T00:00:00Z"
		}
		
	]
}
